{"version":3,"file":"CognitoRepository.js","sourceRoot":"","sources":["../../src/repositories/CognitoRepository.ts"],"names":[],"mappings":";;;AAAA,gGAImD;AACnD,qDAAuE;AAOvE,MAAa,iBAAkB,SAAQ,+BAAc;IAC7B;IAAtB,YAAsB,KAA6B;QACjD,KAAK,CAAC,KAAK,CAAC,CAAC;QADO,UAAK,GAAL,KAAK,CAAwB;IAEnD,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,QAAgB,EAAE,QAAgB;QACrD,MAAM,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CACjC,IAAI,8DAA2B,CAAC;YAC9B,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU;YACjC,QAAQ,EAAE,QAAQ;YAClB,QAAQ,EAAE,QAAQ;YAClB,SAAS,EAAE,IAAI;SAChB,CAAC,CACH,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,MAAc,EAAE,QAAgB;QACjD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAChD,IAAI,sDAAmB,CAAC;YACtB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,eAAe;YACjD,QAAQ,EAAE,oBAAoB;YAC9B,cAAc,EAAE;gBACd,QAAQ,EAAE,MAAM;gBAChB,QAAQ,EAAE,QAAQ;aACnB;SACF,CAAC,CACH,CAAC;QACF,MAAM,KAAK,GAAG,MAAM,CAAC,oBAAoB,EAAE,OAAO,CAAC;QACnD,OAAO,EAAE,KAAK,EAAE,CAAC;IACnB,CAAC;CACF;AA9BD,8CA8BC","sourcesContent":["import {\n  AdminSetUserPasswordCommand,\n  CognitoIdentityProviderClient,\n  InitiateAuthCommand,\n} from \"@aws-sdk/client-cognito-identity-provider\";\nimport { BaseRepository, BaseRepositoryProps } from \"./BaseRepository\";\n\nexport interface CognitoRepositoryProps extends BaseRepositoryProps {\n  cognitoClient: CognitoIdentityProviderClient;\n  userPoolId: string;\n}\n\nexport class CognitoRepository extends BaseRepository {\n  constructor(protected props: CognitoRepositoryProps) {\n    super(props);\n  }\n\n  async changePassword(username: string, password: string) {\n    await this.props.cognitoClient.send(\n      new AdminSetUserPasswordCommand({\n        UserPoolId: this.props.userPoolId,\n        Username: username,\n        Password: password,\n        Permanent: true,\n      }),\n    );\n  }\n\n  async initiateAuth(number: string, password: string) {\n    const result = await this.props.cognitoClient.send(\n      new InitiateAuthCommand({\n        ClientId: this.props.applications.internetBanking,\n        AuthFlow: \"USER_PASSWORD_AUTH\",\n        AuthParameters: {\n          USERNAME: number,\n          PASSWORD: password,\n        },\n      }),\n    );\n    const token = result.AuthenticationResult?.IdToken;\n    return { token };\n  }\n}\n"]}