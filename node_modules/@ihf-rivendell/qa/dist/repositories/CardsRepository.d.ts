import { LambdaClient } from "@aws-sdk/client-lambda";
import { BaseRepository, BaseRepositoryProps } from "./BaseRepository";
import { ICards } from "./interfaces/ICards";
export declare enum CardResource {
    Cards = "/cards",
    CardById = "/cards/{cardId}",
    CardPayments = "/cards/{cardId}/payments"
}
export interface CardsRepositoryProps extends BaseRepositoryProps {
    lambdaClient: LambdaClient;
    cardsLambda: string;
}
export declare class CardsRepository extends BaseRepository {
    protected props: CardsRepositoryProps;
    constructor(props: CardsRepositoryProps);
    private sendLambdaCommand;
    create(cards: ICards): Promise<any>;
    findByCustomerId(cards: ICards): Promise<any>;
    update(card: ICards): Promise<any>;
    makePayment(card: Partial<ICards>): Promise<any>;
    delete(card: ICards): Promise<any>;
}
