{"version":3,"file":"LeadsRepository.js","sourceRoot":"","sources":["../../src/repositories/LeadsRepository.ts"],"names":[],"mappings":"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","sourcesContent":["import { InvokeCommand, LambdaClient } from \"@aws-sdk/client-lambda\";\nimport {\n  GetSecretValueCommand,\n  SecretsManagerClient,\n  UpdateSecretCommand,\n} from \"@aws-sdk/client-secrets-manager\";\nimport { fromUtf8 } from \"@aws-sdk/util-utf8\";\nimport {\n  DeleteCommand,\n  DynamoDBDocumentClient,\n  PutCommand,\n  QueryCommand,\n  UpdateCommand,\n} from \"@aws-sdk/lib-dynamodb\";\nimport {\n  APPLICATION_TYPE_HEADER,\n  BaseRepository,\n  BaseRepositoryProps,\n} from \"./BaseRepository\";\nimport { HeaderType, HttpMethod } from \"../integration/assets/httpConstants\";\nimport { logger } from \"../utils/log/index\";\nimport { IPromotion, Lead, LeadSecrets } from \"./interfaces/ILeads\";\n\nexport enum LeadsResource {\n  Leads = \"/leads\",\n  LeadById = \"/leads/{leadId}\",\n  LeadSales = \"/leads/{leadId}/sales\",\n}\n\nexport interface LeadsRepositoryProps extends BaseRepositoryProps {\n  lambdaClient: LambdaClient;\n  dynamoDbClient: DynamoDBDocumentClient;\n  leadsLambda: string;\n  leadsTable: string;\n  leadsPromotionsTable: string;\n  secretId: string;\n}\n\nexport class LeadsRepository extends BaseRepository {\n  private secretsManagerClient: SecretsManagerClient;\n\n  constructor(protected props: LeadsRepositoryProps) {\n    super(props);\n    this.secretsManagerClient = new SecretsManagerClient({});\n  }\n\n  async getSecretValue(): Promise<LeadSecrets> {\n    try {\n      const secretValue = await this.secretsManagerClient.send(\n        new GetSecretValueCommand({\n          SecretId: this.props.secretId,\n        }),\n      );\n      const parsed = JSON.parse(secretValue.SecretString);\n      return {\n        ips: parsed.ips.split(\",\").map((ip: string) => ip.trim()),\n      };\n    } catch (error) {\n      logger.info(error);\n      throw new Error(\"Error getting secret value\");\n    }\n  }\n\n  async setSecretValue(values: LeadSecrets): Promise<void> {\n    const request = JSON.stringify({\n      ...values,\n      ips: values.ips.join(\",\"),\n    });\n\n    try {\n      await this.secretsManagerClient.send(\n        new UpdateSecretCommand({\n          SecretId: this.props.secretId,\n          SecretString: request,\n        }),\n      );\n    } catch (error) {\n      logger.info(error);\n      throw new Error(\"Error updating secret value\");\n    }\n  }\n\n  private async sendLambdaCommand(payload: object) {\n    const invokeCommand = new InvokeCommand({\n      FunctionName: this.props.leadsLambda,\n      Payload: fromUtf8(JSON.stringify(payload)),\n    });\n    const response = await this.props.lambdaClient.send(invokeCommand);\n    return this.processLambdaApiResponse(response);\n  }\n\n  async findByIdentityDocument(props: {\n    lead: Lead;\n    isActive?: boolean;\n    headerType?: HeaderType;\n  }) {\n    const payload = {\n      resource: LeadsResource.Leads,\n      httpMethod: HttpMethod.GET,\n      queryStringParameters: {\n        documentType: props.lead.customer.identityDocument.type,\n        documentNumber: props.lead.customer.identityDocument.number,\n        currency: props.lead.currency,\n        amount: props.lead.amount,\n        status: props.isActive ? \"ACTIVE\" : \"INACTIVE\",\n        annualNominalRate: props.lead.annualNominalRate,\n      },\n      headers: this.selectHeaderType({\n        header: {\n          type: props.headerType,\n        },\n      }),\n    };\n    return this.sendLambdaCommand(payload);\n  }\n\n  async findByCustomerId(lead: Lead, isActive?: boolean) {\n    const payload = {\n      resource: LeadsResource.Leads,\n      httpMethod: HttpMethod.GET,\n      queryStringParameters: {\n        status: isActive ? \"ACTIVE\" : \"INACTIVE\",\n      },\n      headers: this.getInternetBankingHeaders({\n        customerId: lead.customer.id,\n      }),\n    };\n    return this.sendLambdaCommand(payload);\n  }\n\n  async findPromotionBySKU(sku: string): Promise<IPromotion> {\n    const { Items: items } = await this.props.dynamoDbClient.send(\n      new QueryCommand({\n        TableName: this.props.leadsPromotionsTable,\n        IndexName: \"skuIndex\",\n        KeyConditionExpression: \"#sku = :sku\",\n        ExpressionAttributeNames: {\n          \"#sku\": \"sku\",\n        },\n        ExpressionAttributeValues: {\n          \":sku\": sku,\n        },\n      }),\n    );\n\n    if (!items || items.length === 0) {\n      throw new Error(\"Not found\");\n    }\n\n    return items[0] as IPromotion;\n  }\n\n  async createSale(lead: any) {\n    const payload = {\n      resource: LeadsResource.LeadSales,\n      httpMethod: HttpMethod.POST,\n      pathParameters: { leadId: lead.id },\n      headers: {\n        ...this.getBackOfficeHeaders(),\n        [APPLICATION_TYPE_HEADER]: \"EMPLOYEE\",\n      },\n      body: JSON.stringify(lead),\n    };\n    return this.sendLambdaCommand(payload);\n  }\n\n  async findExternalLead(lead: {\n    documentType: string;\n    documentNumber: string;\n    email?: string;\n    mobile?: string;\n    ip?: \"127.0.0.1\";\n  }) {\n    const payload = {\n      resource: LeadsResource.Leads,\n      httpMethod: HttpMethod.GET,\n      requestContext: { identity: { sourceIp: lead.ip } },\n      queryStringParameters: {\n        documentType: lead.documentType,\n        documentNumber: lead.documentNumber,\n        email: lead.email,\n        mobile: lead.mobile,\n      },\n      headers: this.getExternalHeaders(),\n    };\n    return this.sendLambdaCommand(payload);\n  }\n\n  async find(lead: Lead) {\n    const payload = {\n      resource: LeadsResource.LeadById,\n      httpMethod: HttpMethod.GET,\n      pathParameters: { leadId: lead.id },\n      headers: this.getInternetBankingHeaders({\n        customerId: lead.customer.id,\n      }),\n    };\n    return this.sendLambdaCommand(payload);\n  }\n\n  async create(lead: Lead) {\n    await this.selectRangeByProductType(lead);\n\n    await this.props.dynamoDbClient.send(\n      new PutCommand({\n        TableName: this.props.leadsTable,\n        Item: {\n          id: this.getUuid(),\n          campaignId: Number(lead.campaignId),\n          status: lead.status,\n          product: {\n            type: lead.product.type,\n            subType: lead.product.subType,\n          },\n          documentKey: `${lead.customer?.identityDocument?.type}${lead.customer?.identityDocument?.number}`,\n          amount: Number(lead.amount),\n          interestRate: Number(lead.interestRate),\n          annualNominalRate: lead.annualNominalRate,\n          currency: lead.currency,\n          type: lead.type,\n          expirationDate: lead.expirationDate,\n          creationDate: lead.creationDate,\n        },\n      }),\n    );\n  }\n\n  async update(lead: Lead, searchLead: number) {\n    const result = await this.findByIdentityDocument({\n      lead: {\n        customer: {\n          identityDocument: {\n            type: lead.customer.identityDocument.type,\n            number: lead.customer.identityDocument.number,\n          },\n        },\n        amount: searchLead,\n        currency: lead.currency,\n      },\n      headerType: HeaderType.Employee,\n    });\n\n    if (Object.keys(result.body).length === 0) {\n      throw new Error(\"Nothing to update\");\n    }\n\n    await Promise.all(\n      result.body.map(async (l: { id: string }) => {\n        await this.props.dynamoDbClient.send(\n          new UpdateCommand({\n            TableName: this.props.leadsTable,\n            Key: {\n              documentKey: `${lead?.customer?.identityDocument?.type}${lead?.customer?.identityDocument?.number}`,\n              id: l.id,\n            },\n            UpdateExpression: \"SET #amount = :amount\",\n            ExpressionAttributeNames: {\n              \"#amount\": \"amount\",\n            },\n            ExpressionAttributeValues: {\n              \":amount\": lead.amount,\n            },\n          }),\n        );\n      }),\n    );\n  }\n\n  async updateLeadById(lead: Lead) {\n    const leads = await this.findByIdentityDocument({\n      lead: {\n        customer: {\n          identityDocument: {\n            type: lead.customer.identityDocument.type,\n            number: lead.customer.identityDocument.number,\n          },\n        },\n        amount: lead.amount,\n        currency: lead.currency,\n      },\n      headerType: HeaderType.Employee,\n    });\n    const result = leads.body?.filter((item: Lead) => item.id === lead.id);\n\n    if (!lead.id || !result || result.lenght === 0) {\n      throw new Error(\"Nothing to update\");\n    }\n\n    await this.props.dynamoDbClient.send(\n      new UpdateCommand({\n        TableName: this.props.leadsTable,\n        Key: {\n          documentKey: `${lead?.customer?.identityDocument?.type}${lead?.customer?.identityDocument?.number}`,\n          id: lead.id,\n        },\n        UpdateExpression: \"SET #expirationDate = :expirationDate\",\n        ExpressionAttributeNames: {\n          \"#expirationDate\": \"expirationDate\",\n        },\n        ExpressionAttributeValues: {\n          \":expirationDate\": lead.expirationDate,\n        },\n      }),\n    );\n  }\n\n  async createPromotion(promotion: Partial<IPromotion>) {\n    await this.props.dynamoDbClient.send(\n      new PutCommand({\n        TableName: this.props.leadsPromotionsTable,\n        Item: {\n          id: this.getUuid(),\n          sku: promotion.sku,\n          name: promotion.name,\n          amount: promotion.amount,\n          interestRate: promotion.interestRate,\n          annualNominalRate: promotion.annualNominalRate,\n          term: promotion.term,\n          startDate: promotion.startDate,\n          endDate: promotion.endDate,\n          creationDate: promotion.creationDate,\n          lastUpdateDate: promotion.lastUpdateDate,\n        },\n      }),\n    );\n  }\n\n  async updatePromotion(promotion: Partial<IPromotion>) {\n    try {\n      const updateExpression = this.getUpdateExpression(promotion, [\n        \"name\",\n        \"amount\",\n        \"interestRate\",\n        \"annualNominalRate\",\n        \"term\",\n        \"startDate\",\n        \"endDate\",\n        \"lastUpdateDate\",\n      ]);\n\n      await this.props.dynamoDbClient.send(\n        new UpdateCommand({\n          TableName: this.props.leadsPromotionsTable,\n          Key: {\n            id: promotion.id,\n          },\n          ConditionExpression: \"attribute_exists(id)\",\n          ...updateExpression,\n        }),\n      );\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  public async deleteByIdentityDocument(lead: Lead) {\n    const response = await this.findAllByIdentityDocument({\n      customer: {\n        identityDocument: {\n          type: lead.customer.identityDocument.type,\n          number: lead.customer.identityDocument.number,\n        },\n      },\n    });\n\n    if (Object.keys(response).length === 0) {\n      throw new Error(\"Nothing to delete\");\n    }\n\n    await Promise.all(\n      response.map(async (item: { id: string }) => {\n        await this.props.dynamoDbClient.send(\n          new DeleteCommand({\n            TableName: this.props.leadsTable,\n            Key: {\n              documentKey: `${lead.customer.identityDocument.type}${lead.customer.identityDocument.number}`,\n              id: item.id,\n            },\n          }),\n        );\n      }),\n    );\n  }\n\n  private unmarshalLead(item: Record<string, any>) {\n    return {\n      id: item.id,\n      campaignId: item.campaignId,\n      product: {\n        type: item.product?.type,\n        subType: item.product?.subType,\n      },\n      customer: {\n        id: item.customerId,\n      },\n      interestRate: item.interestRate,\n      annualNominalRate: item.annualNominalRate,\n      amount: item.amount,\n      currency: item.currency,\n      creationDate: item.creationDate,\n      expirationDate: item.expirationDate,\n      status: item.status,\n      type: item.type,\n    };\n  }\n\n  async findAllByIdentityDocument(lead: Lead) {\n    const { Items: items } = await this.props.dynamoDbClient.send(\n      new QueryCommand({\n        TableName: this.props.leadsTable,\n        KeyConditionExpression: \"#documentKey = :documentKey\",\n        ExpressionAttributeNames: {\n          \"#documentKey\": \"documentKey\",\n        },\n        ExpressionAttributeValues: {\n          \":documentKey\": `${lead.customer.identityDocument.type}${lead.customer.identityDocument.number}`,\n        },\n      }),\n    );\n\n    if (!items || items.length === 0) {\n      throw new Error(\"Not found\");\n    }\n\n    return items.map((item) => this.unmarshalLead(item));\n  }\n\n  private selectRangeByProductType(lead: Lead) {\n    switch (lead.product.subType) {\n      case \"BNPL\":\n        if (lead.amount > 10000 || lead.amount < 200) {\n          throw new Error(\"Amount is out of range\");\n        }\n        break;\n      case \"LD\":\n        if (lead.amount > 15000 || lead.amount < 500) {\n          throw new Error(\"Amount is out of range\");\n        }\n        break;\n      default:\n        throw new Error(`Subproduct ${lead.product.subType} is not supported`);\n    }\n  }\n}\n"]}