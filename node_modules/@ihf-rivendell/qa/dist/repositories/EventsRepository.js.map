{"version":3,"file":"EventsRepository.js","sourceRoot":"","sources":["../../src/repositories/EventsRepository.ts"],"names":[],"mappings":";;;AAAA,kDAA8C;AAC9C,0DAAqE;AACrE,uEAAiE;AACjE,qDAAuE;AAOvE,MAAa,gBAAiB,SAAQ,+BAAc;IAC5B;IAAtB,YAAsB,KAA4B;QAChD,KAAK,CAAC,KAAK,CAAC,CAAC;QADO,UAAK,GAAL,KAAK,CAAuB;IAElD,CAAC;IAED,KAAK,CAAC,IAAI,CAAC,aAAqB,EAAE,KAAc;QAC9C,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CACjD,IAAI,6BAAa,CAAC;YAChB,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY;YACrC,OAAO,EAAE,IAAA,oBAAQ,EACf,IAAI,CAAC,SAAS,CAAC;gBACb,QAAQ,EAAE,SAAS;gBACnB,UAAU,EAAE,0BAAU,CAAC,GAAG;gBAC1B,qBAAqB,EAAE,EAAE,aAAa,EAAE,KAAK,EAAE;aAChD,CAAC,CACH;SACF,CAAC,CACH,CAAC;QACF,OAAO,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC;IACjD,CAAC;CACF;AApBD,4CAoBC","sourcesContent":["import { fromUtf8 } from \"@aws-sdk/util-utf8\";\nimport { InvokeCommand, LambdaClient } from \"@aws-sdk/client-lambda\";\nimport { HttpMethod } from \"../integration/assets/httpConstants\";\nimport { BaseRepository, BaseRepositoryProps } from \"./BaseRepository\";\n\nexport interface EventsRepositoryProps extends BaseRepositoryProps {\n  lambdaClient: LambdaClient;\n  eventsLambda: string;\n}\n\nexport class EventsRepository extends BaseRepository {\n  constructor(protected props: EventsRepositoryProps) {\n    super(props);\n  }\n\n  async find(correlationId: string, label?: string) {\n    const response = await this.props.lambdaClient.send(\n      new InvokeCommand({\n        FunctionName: this.props.eventsLambda,\n        Payload: fromUtf8(\n          JSON.stringify({\n            resource: \"/events\",\n            httpMethod: HttpMethod.GET,\n            queryStringParameters: { correlationId, label },\n          }),\n        ),\n      }),\n    );\n    return this.processLambdaApiResponse(response);\n  }\n}\n"]}