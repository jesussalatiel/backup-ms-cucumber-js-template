import { InvokeCommandOutput } from "@aws-sdk/client-lambda";
import { HeaderType } from "../integration/assets/httpConstants";
export interface BaseRepositoryProps {
    applications: {
        internetBanking: string;
        backOffice: string;
        internalOps?: string;
    };
    employeeId: string;
}
export declare const CORRELATION_HEADER = "IHF-Correlation-Id";
export declare const APPLICATION_ID_HEADER = "IHF-Application-Id";
export declare const APPLICATION_TYPE_HEADER = "IHF-Application-Type";
export declare const CUSTOMER_ID_HEADER = "IHF-Customer-Id";
export declare const CUSTOMER_TYPE_HEADER = "IHF-Customer-Type";
export declare const EMPLOYEE_ID_HEADER = "IHF-Employee-Id";
export declare const AUTHORIZATION = "Authorization";
export declare enum ApplicationType {
    CUSTOMER = "CUSTOMER",
    EMPLOYEE = "EMPLOYEE",
    EXTERNAL = "EXTERNAL",
    INTERNAL = "INTERNAL"
}
export declare enum CustomerType {
    INDIVIDUAL = "INDIVIDUAL",
    BUSINESS = "BUSINESS"
}
export declare class BaseRepository {
    protected props: BaseRepositoryProps;
    constructor(props: BaseRepositoryProps);
    getUuid(): string;
    getUpdateExpression<T extends object>(domain: T, attributes: (keyof T)[]): {
        UpdateExpression: string;
        ExpressionAttributeNames: {};
        ExpressionAttributeValues: {};
    };
    getInternetBankingHeaders(params: {
        customerId?: string;
    }): {
        "IHF-Application-Id": string;
        "IHF-Application-Type": ApplicationType;
        "IHF-Correlation-Id": string;
        "IHF-Customer-Id": string;
        "IHF-Customer-Type": CustomerType;
        "IHF-Employee-Id": any;
    };
    getExternalHeaders(): {
        "IHF-Application-Id": string;
        "IHF-Application-Type": ApplicationType;
        "IHF-Correlation-Id": string;
        "IHF-Customer-Id": any;
        "IHF-Customer-Type": CustomerType;
        "IHF-Employee-Id": any;
    };
    getBackOfficeHeaders(): {
        "IHF-Application-Id": string;
        "IHF-Application-Type": ApplicationType;
        "IHF-Correlation-Id": string;
        "IHF-Customer-Id": any;
        "IHF-Customer-Type": any;
        "IHF-Employee-Id": string;
    };
    getInternalHeaders(params: {
        customerId?: string;
        customerType?: CustomerType;
    }): {
        "IHF-Application-Id": string;
        "IHF-Application-Type": ApplicationType;
        "IHF-Correlation-Id": string;
        "IHF-Customer-Id": string;
        "IHF-Customer-Type": CustomerType;
        "IHF-Employee-Id": any;
    };
    getInternetBankingRequestContext(params: {
        customerId: string;
        documentType?: string;
        documentNumber?: string;
    }): {
        authorizer: {
            claims: {
                aud: string;
                sub: string;
                "custom:documentType": string;
                "custom:documentNumber": string;
            };
        };
    };
    validateLambdaResponse(lambdaResponse: InvokeCommandOutput, expect: {
        statusCode: number;
        payload?: boolean;
    }): void;
    processLambdaApiResponse(lambdaResponse: InvokeCommandOutput): any;
    selectHeaderType(props: {
        header: {
            type: HeaderType;
        };
        customer?: {
            id: any;
        };
    }): {
        "IHF-Application-Id": string;
        "IHF-Application-Type": ApplicationType;
        "IHF-Correlation-Id": string;
        "IHF-Customer-Id": any;
        "IHF-Customer-Type": any;
        "IHF-Employee-Id": string;
    } | {
        "IHF-Application-Id": string;
        "IHF-Application-Type": ApplicationType;
        "IHF-Correlation-Id": string;
        "IHF-Customer-Id": any;
        "IHF-Customer-Type": CustomerType;
        "IHF-Employee-Id": any;
    };
}
