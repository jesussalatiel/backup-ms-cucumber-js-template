{"version":3,"file":"MambuRepository.js","sourceRoot":"","sources":["../../src/repositories/MambuRepository.ts"],"names":[],"mappings":";;;AAAA,wDAI+B;AAC/B,qDAAuE;AAQvE,MAAa,eAAgB,SAAQ,+BAAc;IAC3B;IAAtB,YAAsB,KAA2B;QAC/C,KAAK,CAAC,KAAK,CAAC,CAAC;QADO,UAAK,GAAL,KAAK,CAAsB;IAEjD,CAAC;IAED,KAAK,CAAC,kBAAkB,CAAC,MAAc;QACrC,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CACnD,IAAI,yBAAU,CAAC;YACb,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe;YACrC,GAAG,EAAE,EAAE,MAAM,EAAE;SAChB,CAAC,CACH,CAAC;QAEF,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK,CAAC,wBAAwB,CAC5B,MAAc,EACd,MAAc,EACd,cAAwB;QAExB,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;QAEnD,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY;aACnC,MAAM,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;aAChE,GAAG,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,WAAW,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;QAEtD,MAAM,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAClC,IAAI,4BAAa,CAAC;YAChB,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe;YACrC,GAAG,EAAE,EAAE,MAAM,EAAE;YACf,mBAAmB,EAAE,0BAA0B;YAC/C,gBAAgB,EAAE,mCAAmC;YACrD,yBAAyB,EAAE,EAAE,eAAe,EAAE,YAAY,EAAE;SAC7D,CAAC,CACH,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,sBAAsB,CAAC,UAAkB;QAC7C,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CACnD,IAAI,yBAAU,CAAC;YACb,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,mBAAmB;YACzC,GAAG,EAAE,EAAE,UAAU,EAAE;SACpB,CAAC,CACH,CAAC;QAEF,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAhDD,0CAgDC","sourcesContent":["import {\n  GetCommand,\n  DynamoDBDocumentClient,\n  UpdateCommand,\n} from \"@aws-sdk/lib-dynamodb\";\nimport { BaseRepository, BaseRepositoryProps } from \"./BaseRepository\";\n\nexport interface MambuRepositoryProps extends BaseRepositoryProps {\n  dynamoDbClient: DynamoDBDocumentClient;\n  mambuLoansTable: string;\n  mambuCustomersTable: string;\n}\n\nexport class MambuRepository extends BaseRepository {\n  constructor(protected props: MambuRepositoryProps) {\n    super(props);\n  }\n\n  async findLoansFromMambu(loanId: string) {\n    const { Item } = await this.props.dynamoDbClient.send(\n      new GetCommand({\n        TableName: this.props.mambuLoansTable,\n        Key: { loanId },\n      }),\n    );\n\n    return Item;\n  }\n\n  async updateInstallmentsStatus(\n    loanId: string,\n    status: string,\n    installmentIds: string[],\n  ) {\n    const loan = await this.findLoansFromMambu(loanId);\n\n    const installments = loan.installments\n      .filter((installment) => installmentIds.includes(installment.id))\n      .map((installment) => ({ ...installment, status }));\n\n    await this.props.dynamoDbClient.send(\n      new UpdateCommand({\n        TableName: this.props.mambuLoansTable,\n        Key: { loanId },\n        ConditionExpression: \"attribute_exists(loanId)\",\n        UpdateExpression: \"SET #installments = :installments\",\n        ExpressionAttributeValues: { \":installments\": installments },\n      }),\n    );\n  }\n\n  async findCustomersFromMambu(customerId: string) {\n    const { Item } = await this.props.dynamoDbClient.send(\n      new GetCommand({\n        TableName: this.props.mambuCustomersTable,\n        Key: { customerId },\n      }),\n    );\n\n    return Item;\n  }\n}\n"]}