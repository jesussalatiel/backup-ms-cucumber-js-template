import { CognitoIdentityProviderClient } from "@aws-sdk/client-cognito-identity-provider";
import { DynamoDBDocumentClient } from "@aws-sdk/lib-dynamodb";
import { LambdaClient } from "@aws-sdk/client-lambda";
import { BaseRepository, BaseRepositoryProps } from "./BaseRepository";
import { Employee } from "./interfaces";
export interface EmployeesRepositoryProps extends BaseRepositoryProps {
    cognitoClient: CognitoIdentityProviderClient;
    lambdaClient: LambdaClient;
    employeesLambda: string;
    userPoolId: string;
    dynamoDbClient: DynamoDBDocumentClient;
    employeesTable: string;
    employeesSalt: string;
}
export declare class EmployeesRepository extends BaseRepository {
    protected props: EmployeesRepositoryProps;
    constructor(props: EmployeesRepositoryProps);
    protected getTimestamp(): number;
    private sendLambdaCommand;
    findById(employeeId: string): Promise<any>;
    findByExternalId(externalId: string): Promise<any>;
    private findEmployeeCognitoByExternalId;
    createEmployee(employee: Partial<Employee>): Promise<any>;
    updateEmployee(employee: Partial<Employee>): Promise<any>;
    deleteById(employeeId: string): Promise<any>;
    createMasiveEmployees(employees: Partial<Employee>[]): Promise<number>;
    initiateAuth(username: string, password: string): Promise<{
        token: string;
    }>;
    changePassword(username: string, password: string): Promise<void>;
    private createEmployeesCognito;
    private createEmployeesDynamo;
    private createPassword;
}
