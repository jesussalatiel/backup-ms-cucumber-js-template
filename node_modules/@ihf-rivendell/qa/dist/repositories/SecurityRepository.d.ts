import { LambdaClient } from "@aws-sdk/client-lambda";
import { DynamoDBDocumentClient } from "@aws-sdk/lib-dynamodb";
import { BaseRepository, BaseRepositoryProps } from "./BaseRepository";
import { ISecurityOTP } from "./interfaces/ISecurity";
export declare enum SecurityResource {
    SSO = "/security/sso",
    TOKEN = "/security/token",
    OTP = "/security/otp",
    VALIDATE_OTP = "/security/otp/{code}/validate"
}
export interface SecurityRepositoryProps extends BaseRepositoryProps {
    lambdaClient: LambdaClient;
    dynamoDbClient: DynamoDBDocumentClient;
    securityOTPTable: string;
    securityLambda: string;
}
export declare class SecurityRepository extends BaseRepository {
    protected props: SecurityRepositoryProps;
    constructor(props: SecurityRepositoryProps);
    private sendLambdaCommand;
    singleSignOn(externalId: string): Promise<any>;
    getExternalToken(code: string): Promise<any>;
    findOTPs(securityOTP: Partial<ISecurityOTP>): Promise<ISecurityOTP[]>;
    createOTP(securityOTP: Partial<ISecurityOTP>): Promise<any>;
    validateOTP(securityOTP: Partial<ISecurityOTP>): Promise<any>;
}
