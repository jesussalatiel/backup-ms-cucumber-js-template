{"version":3,"file":"BaseRepository.js","sourceRoot":"","sources":["../../src/repositories/BaseRepository.ts"],"names":[],"mappings":";;;AAAA,mCAAoC;AAEpC,kDAA4C;AAC5C,uEAAiE;AAWpD,QAAA,kBAAkB,GAAG,oBAAoB,CAAC;AAC1C,QAAA,qBAAqB,GAAG,oBAAoB,CAAC;AAC7C,QAAA,uBAAuB,GAAG,sBAAsB,CAAC;AACjD,QAAA,kBAAkB,GAAG,iBAAiB,CAAC;AACvC,QAAA,oBAAoB,GAAG,mBAAmB,CAAC;AAC3C,QAAA,kBAAkB,GAAG,iBAAiB,CAAC;AACvC,QAAA,aAAa,GAAG,eAAe,CAAC;AAE7C,IAAY,eAKX;AALD,WAAY,eAAe;IACzB,wCAAqB,CAAA;IACrB,wCAAqB,CAAA;IACrB,wCAAqB,CAAA;IACrB,wCAAqB,CAAA;AACvB,CAAC,EALW,eAAe,+BAAf,eAAe,QAK1B;AAED,IAAY,YAGX;AAHD,WAAY,YAAY;IACtB,yCAAyB,CAAA;IACzB,qCAAqB,CAAA;AACvB,CAAC,EAHW,YAAY,4BAAZ,YAAY,QAGvB;AAED,MAAa,cAAc;IACH;IAAtB,YAAsB,KAA0B;QAA1B,UAAK,GAAL,KAAK,CAAqB;IAAG,CAAC;IAEpD,OAAO;QACL,OAAO,GAAG,IAAA,mBAAU,GAAE,EAAE,CAAC;IAC3B,CAAC;IAED,mBAAmB,CAAmB,MAAS,EAAE,UAAuB;QACtE,MAAM,YAAY,GAAG,UAAU,CAAC,MAAM,CACpC,CAAC,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC,GAAc,CAAC,KAAK,SAAS,CAC9C,CAAC;QAEF,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAC9B,OAAO,SAAS,CAAC;QACnB,CAAC;QAED,OAAO,YAAY,CAAC,MAAM,CACxB,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;YACpB,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YACzB,OAAO;gBACL,gBAAgB,EAAE,GAAG,IAAI,CAAC,gBAAgB,GACxC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GACrB,KAAK,GAAG,OAAO,GAAG,EAAE;gBACpB,wBAAwB,EAAE;oBACxB,GAAG,IAAI,CAAC,wBAAwB;oBAChC,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,IAAI;iBAClB;gBACD,yBAAyB,EAAE;oBACzB,GAAG,IAAI,CAAC,yBAAyB;oBACjC,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC;iBAC1B;aACF,CAAC;QACJ,CAAC,EACD;YACE,gBAAgB,EAAE,KAAK;YACvB,wBAAwB,EAAE,EAAE;YAC5B,yBAAyB,EAAE,EAAE;SAC9B,CACF,CAAC;IACJ,CAAC;IAED,yBAAyB,CAAC,MAA+B;QACvD,OAAO;YACL,CAAC,6BAAqB,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,eAAe;YAChE,CAAC,+BAAuB,CAAC,EAAE,eAAe,CAAC,QAAQ;YACnD,CAAC,0BAAkB,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE;YACpC,CAAC,0BAAkB,CAAC,EAAE,MAAM,CAAC,UAAU;YACvC,CAAC,4BAAoB,CAAC,EAAE,YAAY,CAAC,UAAU;YAC/C,CAAC,0BAAkB,CAAC,EAAE,SAAS;SAChC,CAAC;IACJ,CAAC;IAED,kBAAkB;QAChB,OAAO;YACL,CAAC,6BAAqB,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,eAAe;YAChE,CAAC,+BAAuB,CAAC,EAAE,eAAe,CAAC,QAAQ;YACnD,CAAC,0BAAkB,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE;YACpC,CAAC,0BAAkB,CAAC,EAAE,SAAS;YAC/B,CAAC,4BAAoB,CAAC,EAAE,YAAY,CAAC,QAAQ;YAC7C,CAAC,0BAAkB,CAAC,EAAE,SAAS;SAChC,CAAC;IACJ,CAAC;IAED,oBAAoB;QAClB,OAAO;YACL,CAAC,6BAAqB,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,UAAU;YAC3D,CAAC,+BAAuB,CAAC,EAAE,eAAe,CAAC,QAAQ;YACnD,CAAC,0BAAkB,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE;YACpC,CAAC,0BAAkB,CAAC,EAAE,SAAS;YAC/B,CAAC,4BAAoB,CAAC,EAAE,SAAS;YACjC,CAAC,0BAAkB,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU;SAC5C,CAAC;IACJ,CAAC;IAED,kBAAkB,CAAC,MAGlB;QACC,OAAO;YACL,CAAC,6BAAqB,CAAC,EAAE,IAAI;YAC7B,CAAC,+BAAuB,CAAC,EAAE,eAAe,CAAC,QAAQ;YACnD,CAAC,0BAAkB,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE;YACpC,CAAC,0BAAkB,CAAC,EAAE,MAAM,CAAC,UAAU;YACvC,CAAC,4BAAoB,CAAC,EAAE,MAAM,CAAC,YAAY;YAC3C,CAAC,0BAAkB,CAAC,EAAE,SAAS;SAChC,CAAC;IACJ,CAAC;IAED,gCAAgC,CAAC,MAIhC;QACC,OAAO;YACL,UAAU,EAAE;gBACV,MAAM,EAAE;oBACN,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,eAAe;oBAC5C,GAAG,EAAE,MAAM,CAAC,UAAU;oBACtB,qBAAqB,EAAE,MAAM,CAAC,YAAY;oBAC1C,uBAAuB,EAAE,MAAM,CAAC,cAAc;iBAC/C;aACF;SACF,CAAC;IACJ,CAAC;IAED,sBAAsB,CACpB,cAAmC,EACnC,MAGC;QAED,IAAI,cAAc,CAAC,UAAU,KAAK,MAAM,CAAC,UAAU,EAAE,CAAC;YACpD,MAAM,IAAI,KAAK,CAAC,wBAAwB,cAAc,CAAC,UAAU,EAAE,CAAC,CAAC;QACvE,CAAC;QAED,IAAI,MAAM,CAAC,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;YAC9C,MAAM,IAAI,KAAK,CAAC,qBAAqB,cAAc,CAAC,OAAO,EAAE,CAAC,CAAC;QACjE,CAAC;IACH,CAAC;IAED,wBAAwB,CAAC,cAAmC;QAC1D,IAAI,CAAC,sBAAsB,CAAC,cAAc,EAAE;YAC1C,UAAU,EAAE,GAAG;YACf,OAAO,EAAE,IAAI;SACd,CAAC,CAAC;QAEH,IAAI,OAAY,CAAC;QACjB,IAAI,cAAc,CAAC,OAAO,EAAE,CAAC;YAC3B,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAA,kBAAM,EAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;QACvD,CAAC;QACD,OAAO;YACL,GAAG,OAAO;YACV,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;SAC1D,CAAC;IACJ,CAAC;IAED,gBAAgB,CAAC,KAGhB;QACC,QAAQ,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YAC1B,KAAK,0BAAU,CAAC,QAAQ;gBACtB,OAAO,EAAE,GAAG,IAAI,CAAC,oBAAoB,EAAE,EAAE,CAAC;YAC5C,KAAK,0BAAU,CAAC,UAAU;gBACxB,OAAO;oBACL,GAAG,IAAI,CAAC,yBAAyB,CAAC,EAAE,UAAU,EAAE,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;iBACrE,CAAC;YACJ,KAAK,0BAAU,CAAC,QAAQ;gBACtB,OAAO,EAAE,GAAG,IAAI,CAAC,kBAAkB,EAAE,EAAE,CAAC;YAC1C,KAAK,0BAAU,CAAC,QAAQ;gBACtB,OAAO;oBACL,GAAG,IAAI,CAAC,kBAAkB,CAAC;wBACzB,UAAU,EAAE,KAAK,CAAC,QAAQ,EAAE,EAAE;qBAC/B,CAAC;iBACH,CAAC;YACJ;gBACE,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;QACrD,CAAC;IACH,CAAC;CACF;AAhKD,wCAgKC","sourcesContent":["import { randomUUID } from \"crypto\";\nimport { InvokeCommandOutput } from \"@aws-sdk/client-lambda\";\nimport { toUtf8 } from \"@aws-sdk/util-utf8\";\nimport { HeaderType } from \"../integration/assets/httpConstants\";\n\nexport interface BaseRepositoryProps {\n  applications: {\n    internetBanking: string;\n    backOffice: string;\n    internalOps?: string;\n  };\n  employeeId: string;\n}\n\nexport const CORRELATION_HEADER = \"IHF-Correlation-Id\";\nexport const APPLICATION_ID_HEADER = \"IHF-Application-Id\";\nexport const APPLICATION_TYPE_HEADER = \"IHF-Application-Type\";\nexport const CUSTOMER_ID_HEADER = \"IHF-Customer-Id\";\nexport const CUSTOMER_TYPE_HEADER = \"IHF-Customer-Type\";\nexport const EMPLOYEE_ID_HEADER = \"IHF-Employee-Id\";\nexport const AUTHORIZATION = \"Authorization\";\n\nexport enum ApplicationType {\n  CUSTOMER = \"CUSTOMER\",\n  EMPLOYEE = \"EMPLOYEE\",\n  EXTERNAL = \"EXTERNAL\",\n  INTERNAL = \"INTERNAL\",\n}\n\nexport enum CustomerType {\n  INDIVIDUAL = \"INDIVIDUAL\",\n  BUSINESS = \"BUSINESS\",\n}\n\nexport class BaseRepository {\n  constructor(protected props: BaseRepositoryProps) {}\n\n  getUuid() {\n    return `${randomUUID()}`;\n  }\n\n  getUpdateExpression<T extends object>(domain: T, attributes: (keyof T)[]) {\n    const attrToUpdate = attributes.filter(\n      (key) => domain[key as keyof T] !== undefined,\n    );\n\n    if (attrToUpdate.length === 0) {\n      return undefined;\n    }\n\n    return attrToUpdate.reduce(\n      (prev, curr, index) => {\n        const key = String(curr);\n        return {\n          UpdateExpression: `${prev.UpdateExpression}${\n            index === 0 ? \"\" : \",\"\n          } #${key} = :${key}`,\n          ExpressionAttributeNames: {\n            ...prev.ExpressionAttributeNames,\n            [`#${key}`]: curr,\n          },\n          ExpressionAttributeValues: {\n            ...prev.ExpressionAttributeValues,\n            [`:${key}`]: domain[curr],\n          },\n        };\n      },\n      {\n        UpdateExpression: \"SET\",\n        ExpressionAttributeNames: {},\n        ExpressionAttributeValues: {},\n      },\n    );\n  }\n\n  getInternetBankingHeaders(params: { customerId?: string }) {\n    return {\n      [APPLICATION_ID_HEADER]: this.props.applications.internetBanking,\n      [APPLICATION_TYPE_HEADER]: ApplicationType.CUSTOMER,\n      [CORRELATION_HEADER]: this.getUuid(),\n      [CUSTOMER_ID_HEADER]: params.customerId,\n      [CUSTOMER_TYPE_HEADER]: CustomerType.INDIVIDUAL,\n      [EMPLOYEE_ID_HEADER]: undefined,\n    };\n  }\n\n  getExternalHeaders() {\n    return {\n      [APPLICATION_ID_HEADER]: this.props.applications.internetBanking,\n      [APPLICATION_TYPE_HEADER]: ApplicationType.EXTERNAL,\n      [CORRELATION_HEADER]: this.getUuid(),\n      [CUSTOMER_ID_HEADER]: undefined,\n      [CUSTOMER_TYPE_HEADER]: CustomerType.BUSINESS,\n      [EMPLOYEE_ID_HEADER]: undefined,\n    };\n  }\n\n  getBackOfficeHeaders() {\n    return {\n      [APPLICATION_ID_HEADER]: this.props.applications.backOffice,\n      [APPLICATION_TYPE_HEADER]: ApplicationType.EMPLOYEE,\n      [CORRELATION_HEADER]: this.getUuid(),\n      [CUSTOMER_ID_HEADER]: undefined,\n      [CUSTOMER_TYPE_HEADER]: undefined,\n      [EMPLOYEE_ID_HEADER]: this.props.employeeId,\n    };\n  }\n\n  getInternalHeaders(params: {\n    customerId?: string;\n    customerType?: CustomerType;\n  }) {\n    return {\n      [APPLICATION_ID_HEADER]: \"QA\",\n      [APPLICATION_TYPE_HEADER]: ApplicationType.INTERNAL,\n      [CORRELATION_HEADER]: this.getUuid(),\n      [CUSTOMER_ID_HEADER]: params.customerId,\n      [CUSTOMER_TYPE_HEADER]: params.customerType,\n      [EMPLOYEE_ID_HEADER]: undefined,\n    };\n  }\n\n  getInternetBankingRequestContext(params: {\n    customerId: string;\n    documentType?: string;\n    documentNumber?: string;\n  }) {\n    return {\n      authorizer: {\n        claims: {\n          aud: this.props.applications.internetBanking,\n          sub: params.customerId,\n          \"custom:documentType\": params.documentType,\n          \"custom:documentNumber\": params.documentNumber,\n        },\n      },\n    };\n  }\n\n  validateLambdaResponse(\n    lambdaResponse: InvokeCommandOutput,\n    expect: {\n      statusCode: number;\n      payload?: boolean;\n    },\n  ) {\n    if (lambdaResponse.StatusCode !== expect.statusCode) {\n      throw new Error(`[Lambda] StatusCode: ${lambdaResponse.StatusCode}`);\n    }\n\n    if (expect.payload && !lambdaResponse.Payload) {\n      throw new Error(`[Lambda] Payload: ${lambdaResponse.Payload}`);\n    }\n  }\n\n  processLambdaApiResponse(lambdaResponse: InvokeCommandOutput) {\n    this.validateLambdaResponse(lambdaResponse, {\n      statusCode: 200,\n      payload: true,\n    });\n\n    let payload: any;\n    if (lambdaResponse.Payload) {\n      payload = JSON.parse(toUtf8(lambdaResponse.Payload));\n    }\n    return {\n      ...payload,\n      body: payload.body ? JSON.parse(payload.body) : undefined,\n    };\n  }\n\n  selectHeaderType(props: {\n    header: { type: HeaderType };\n    customer?: { id: any };\n  }) {\n    switch (props.header.type) {\n      case HeaderType.Employee:\n        return { ...this.getBackOfficeHeaders() };\n      case HeaderType.Individual:\n        return {\n          ...this.getInternetBankingHeaders({ customerId: props.customer.id }),\n        };\n      case HeaderType.External:\n        return { ...this.getExternalHeaders() };\n      case HeaderType.Internal:\n        return {\n          ...this.getInternalHeaders({\n            customerId: props.customer?.id,\n          }),\n        };\n      default:\n        throw new Error(\"Header type is not supported.\");\n    }\n  }\n}\n"]}