{"version":3,"file":"LoansRepository.js","sourceRoot":"","sources":["../../src/repositories/LoansRepository.ts"],"names":[],"mappings":"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","sourcesContent":["import { InvokeCommand, LambdaClient } from \"@aws-sdk/client-lambda\";\nimport { fromUtf8 } from \"@aws-sdk/util-utf8\";\nimport {\n  DeleteCommand,\n  DynamoDBDocumentClient,\n  UpdateCommand,\n  QueryCommand,\n} from \"@aws-sdk/lib-dynamodb\";\nimport { BaseRepository, BaseRepositoryProps } from \"./BaseRepository\";\nimport { HeaderType, HttpMethod } from \"../integration/assets/httpConstants\";\nimport { IInstallment, ILoan, ITransaction } from \"./interfaces\";\n\nenum LoanResource {\n  InstallmentsByIdentityDocument = \"/installments\",\n  Loans = \"/loans\",\n  LoanById = \"/loans/{loanId}\",\n  Installments = \"/loans/{loanId}/installments\",\n  Transactions = \"/loans/{loanId}/transactions\",\n  Notifications = \"/loans/{loanId}/transactions-notifications\",\n  InstallmentById = \"/loans/{loanId}/installments/{installmentId}\",\n  Simulations = \"/simulations\",\n  SimulationsById = \"/simulations/{simulationId}\",\n  Reconciliations = \"/reconciliations\",\n  PreviewPayOff = \"/loans/{loanId}/previewPayoff\",\n  TransactionById = \"/loans/{loanId}/transactions/{transactionId}\",\n}\n\nexport interface LoansRepositoryProps extends BaseRepositoryProps {\n  dynamoDbClient: DynamoDBDocumentClient;\n  lambdaClient: LambdaClient;\n  loansLambda: string;\n  loansTable: string;\n  loansInstallmentsTable: string;\n  loansSimulationsTable: string;\n  mambuLoansTable: string;\n  accountingTable?: string;\n}\n\nexport class LoansRepository extends BaseRepository {\n  constructor(protected props: LoansRepositoryProps) {\n    super(props);\n  }\n\n  private async sendLambdaRequest(payload: any) {\n    const invokeCommand = new InvokeCommand({\n      FunctionName: this.props.loansLambda,\n      Payload: fromUtf8(JSON.stringify(payload)),\n    });\n\n    const response = await this.props.lambdaClient.send(invokeCommand);\n    return this.processLambdaApiResponse(response);\n  }\n\n  async findByCustomerId(\n    customerId: string,\n    withPendingInstallments?: boolean,\n  ) {\n    const payload = {\n      resource: LoanResource.Loans,\n      httpMethod: HttpMethod.GET,\n      queryStringParameters: withPendingInstallments\n        ? { withPendingInstallments: \"true\" }\n        : undefined,\n      headers: this.selectHeaderType({\n        header: {\n          type: HeaderType.Individual,\n        },\n        customer: {\n          id: customerId,\n        },\n      }),\n    };\n\n    return this.sendLambdaRequest(payload);\n  }\n\n  async findByDate(startDate: string, endDate: string) {\n    const payload = {\n      resource: LoanResource.Loans,\n      httpMethod: HttpMethod.GET,\n      queryStringParameters: {\n        startDate,\n        endDate,\n      },\n      headers: this.selectHeaderType({\n        header: {\n          type: HeaderType.External,\n        },\n      }),\n    };\n    return this.sendLambdaRequest(payload);\n  }\n\n  async findById(loan: Partial<ILoan>) {\n    const payload = {\n      resource: LoanResource.LoanById,\n      httpMethod: HttpMethod.GET,\n      pathParameters: { loanId: loan.id },\n      headers: this.selectHeaderType({\n        header: {\n          type: HeaderType.Individual,\n        },\n        customer: {\n          id: loan.customer.id,\n        },\n      }),\n    };\n\n    return this.sendLambdaRequest(payload);\n  }\n\n  async findInstallments(loanId: string, customerId: string) {\n    const payload = {\n      resource: LoanResource.Installments,\n      httpMethod: HttpMethod.GET,\n      pathParameters: { loanId },\n      headers: this.selectHeaderType({\n        header: {\n          type: HeaderType.Individual,\n        },\n        customer: {\n          id: customerId,\n        },\n      }),\n    };\n\n    return this.sendLambdaRequest(payload);\n  }\n\n  async findSimulationById(simulationId: string) {\n    const payload = {\n      resource: LoanResource.SimulationsById,\n      httpMethod: HttpMethod.GET,\n      pathParameters: { simulationId },\n      headers: this.selectHeaderType({\n        header: {\n          type: HeaderType.Internal,\n        },\n      }),\n    };\n\n    return this.sendLambdaRequest(payload);\n  }\n\n  async createLoan(loan: Partial<ILoan>) {\n    const payload = {\n      resource: LoanResource.Loans,\n      httpMethod: HttpMethod.POST,\n      headers: this.selectHeaderType({\n        header: {\n          type: HeaderType.Individual,\n        },\n        customer: {\n          id: loan.customer.id,\n        },\n      }),\n      body: JSON.stringify(loan),\n    };\n\n    return this.sendLambdaRequest(payload);\n  }\n\n  async createSimulation(props: {\n    loan: object;\n    headerType: HeaderType;\n    customerId: string;\n  }) {\n    // TODO: use ISimulation instead of loan object\n    const payload = {\n      resource: LoanResource.Simulations,\n      httpMethod: HttpMethod.POST,\n      headers: this.selectHeaderType({\n        header: {\n          type: HeaderType.Individual,\n        },\n        customer: {\n          id: props.customerId,\n        },\n      }),\n      body: JSON.stringify(props.loan),\n    };\n\n    return this.sendLambdaRequest(payload);\n  }\n\n  async createTransaction(transaction: Partial<ITransaction>, loanId: string) {\n    const payload = {\n      resource: LoanResource.Transactions,\n      httpMethod: HttpMethod.POST,\n      pathParameters: { loanId },\n      headers: this.selectHeaderType({\n        header: {\n          type: HeaderType.External,\n        },\n      }),\n      body: JSON.stringify(transaction),\n    };\n\n    return this.sendLambdaRequest(payload);\n  }\n\n  async createTransactionNotification(transaction: Partial<ITransaction>) {\n    const payload = {\n      resource: LoanResource.Notifications,\n      httpMethod: HttpMethod.POST,\n      pathParameters: { loanId: transaction.loan.id },\n      headers: this.selectHeaderType({\n        header: {\n          type: HeaderType.Individual,\n        },\n        customer: {\n          id: transaction.customer.id,\n        },\n      }),\n      body: JSON.stringify(transaction),\n    };\n\n    return this.sendLambdaRequest(payload);\n  }\n\n  async findInstallmentByIndentity(loan: Partial<ILoan>) {\n    const payload = {\n      resource: LoanResource.InstallmentsByIdentityDocument,\n      httpMethod: HttpMethod.GET,\n      queryStringParameters: {\n        documentType: loan.customer.identityDocument.type,\n        documentNumber: loan.customer.identityDocument.number,\n      },\n      headers: this.selectHeaderType({\n        header: {\n          type: HeaderType.External,\n        },\n      }),\n    };\n\n    return this.sendLambdaRequest(payload);\n  }\n\n  async deleteTransaction(loan: Partial<ILoan>) {\n    const payload = {\n      resource: LoanResource.TransactionById,\n      httpMethod: HttpMethod.DELETE,\n      pathParameters: { loanId: loan.id, transactionId: loan.transaction.id },\n      headers: this.selectHeaderType({\n        header: {\n          type: HeaderType.External,\n        },\n      }),\n    };\n\n    return this.sendLambdaRequest(payload);\n  }\n\n  async delete(props: { loan: { id: string }; customer: { id: string } }) {\n    const payload = {\n      resource: LoanResource.LoanById,\n      httpMethod: HttpMethod.DELETE,\n      pathParameters: { loanId: props.loan.id },\n      queryStringParameters: {\n        customerId: props.customer.id,\n      },\n      headers: this.selectHeaderType({\n        header: {\n          type: HeaderType.External,\n        },\n      }),\n    };\n\n    return this.sendLambdaRequest(payload);\n  }\n\n  async reconciliations(props: {\n    externalId: string;\n    branch: string;\n    date: string;\n    type: string;\n  }) {\n    const payload = {\n      resource: LoanResource.Reconciliations,\n      httpMethod: HttpMethod.POST,\n      headers: this.selectHeaderType({\n        header: {\n          type: HeaderType.External,\n        },\n      }),\n      body: JSON.stringify(props),\n    };\n\n    return this.sendLambdaRequest(payload);\n  }\n\n  async update(props: { loanId: string; customerId: string; body: any }) {\n    const payload = {\n      resource: LoanResource.LoanById,\n      httpMethod: HttpMethod.PATCH,\n      pathParameters: { loanId: props.loanId },\n      headers: this.selectHeaderType({\n        header: {\n          type: HeaderType.Individual,\n        },\n        customer: {\n          id: props.customerId,\n        },\n      }),\n      body: JSON.stringify(props.body),\n    };\n\n    return this.sendLambdaRequest(payload);\n  }\n\n  async findAccountingItem(loanId: string) {\n    try {\n      const { Items } = await this.props.dynamoDbClient.send(\n        new QueryCommand({\n          TableName: this.props.accountingTable,\n          KeyConditionExpression: \"#loanId = :loanId\",\n          ExpressionAttributeNames: {\n            \"#loanId\": \"loanId\",\n          },\n          ExpressionAttributeValues: {\n            \":loanId\": loanId,\n          },\n        }),\n      );\n      return Items;\n    } catch (error) {\n      return [];\n    }\n  }\n\n  async activateLoan(props: {\n    loan: Partial<ILoan>;\n    activateLoan: boolean;\n    headerType: HeaderType;\n  }) {\n    const payload = {\n      resource: LoanResource.LoanById,\n      httpMethod: HttpMethod.PATCH,\n      pathParameters: { loanId: props.loan.id },\n      body: JSON.stringify({\n        id: props.loan.id,\n        customer: {\n          id: props.loan.customer.id,\n        },\n        status: props.activateLoan ? \"ACTIVE\" : undefined,\n      }),\n      headers: this.selectHeaderType({\n        header: {\n          type: props.headerType,\n        },\n      }),\n    };\n\n    return this.sendLambdaRequest(payload);\n  }\n\n  async findPreviewPayOff(loanId: string, customerId: string) {\n    const payload = {\n      resource: LoanResource.PreviewPayOff,\n      httpMethod: HttpMethod.GET,\n      pathParameters: { loanId },\n      headers: this.selectHeaderType({\n        header: {\n          type: HeaderType.Individual,\n        },\n        customer: {\n          id: customerId,\n        },\n      }),\n    };\n\n    return this.sendLambdaRequest(payload);\n  }\n\n  async searchCreditWithIBK(documentType: string, documentNumber: string) {\n    const payload = {\n      resource: LoanResource.Loans,\n      httpMethod: HttpMethod.GET,\n      queryStringParameters: {\n        documentType,\n        documentNumber,\n      },\n      headers: this.selectHeaderType({\n        header: {\n          type: HeaderType.External,\n        },\n      }),\n    };\n\n    return this.sendLambdaRequest(payload);\n  }\n\n  async createPaymentWithIBK(props: {\n    loan: {\n      id: string;\n    };\n    customer: {\n      id: string;\n    };\n    installments: object;\n    amount: number;\n    currency: string;\n    prepaymentMethod: string;\n  }) {\n    const payload = {\n      resource: LoanResource.Transactions,\n      body: JSON.stringify({\n        customer: {\n          id: props.customer.id,\n        },\n        installments: props.installments,\n        amount: props.amount,\n        currency: props.currency,\n        prepaymentMethod: props.prepaymentMethod,\n      }),\n      httpMethod: HttpMethod.POST,\n      pathParameters: { loanId: props.loan.id },\n\n      headers: this.selectHeaderType({\n        header: {\n          type: HeaderType.External,\n        },\n      }),\n    };\n\n    return this.sendLambdaRequest(payload);\n  }\n\n  async cancelPaymentWithIBK(loanId: string, transactionId: string) {\n    const payload = {\n      resource: LoanResource.TransactionById,\n      httpMethod: HttpMethod.DELETE,\n      pathParameters: {\n        loanId,\n        transactionId,\n      },\n      headers: this.selectHeaderType({\n        header: {\n          type: HeaderType.External,\n        },\n      }),\n    };\n\n    return this.sendLambdaRequest(payload);\n  }\n\n  async transactionReturnWithIBK(props: {\n    loan: {\n      id: string;\n    };\n    body: object;\n  }) {\n    const payload = {\n      resource: LoanResource.Notifications,\n      httpMethod: HttpMethod.POST,\n      pathParameters: { loanId: props.loan.id },\n      headers: this.selectHeaderType({\n        header: {\n          type: HeaderType.External,\n        },\n      }),\n      body: JSON.stringify(props.body),\n    };\n    return this.sendLambdaRequest(payload);\n  }\n\n  private async updateAttribute(\n    loanId: string,\n    customerId: string,\n    attributeName: string,\n    attributeValue?: any,\n  ) {\n    try {\n      if (!attributeValue) {\n        await this.props.dynamoDbClient.send(\n          new UpdateCommand({\n            TableName: this.props.loansTable,\n            Key: { id: loanId, customerId },\n            ConditionExpression: \"attribute_exists(id)\",\n            UpdateExpression: `REMOVE ${attributeName}`,\n          }),\n        );\n      } else {\n        await this.props.dynamoDbClient.send(\n          new UpdateCommand({\n            TableName: this.props.loansTable,\n            Key: { id: loanId, customerId },\n            ConditionExpression: \"attribute_exists(id)\",\n            UpdateExpression: \"SET #key = :value\",\n            ExpressionAttributeNames: { \"#key\": attributeName },\n            ExpressionAttributeValues: { \":value\": attributeValue },\n          }),\n        );\n      }\n      return true;\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  async updateAttributes(loan: Partial<ILoan>) {\n    try {\n      const updateExpression = this.getUpdateExpression(loan, [\n        \"amount\",\n        \"term\",\n        \"interestRate\",\n        \"annualNominalRate\",\n        \"status\",\n        \"creationDate\",\n        \"lastUpdateDate\",\n        \"activationDate\",\n        \"lastMambuUpdateDate\",\n      ]);\n      await this.props.dynamoDbClient.send(\n        new UpdateCommand({\n          TableName: this.props.loansTable,\n          Key: { id: loan.id, customerId: loan.customer.id },\n          ConditionExpression: \"attribute_exists(id)\",\n          ...updateExpression,\n        }),\n      );\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  async deleteById(loanId: string, customerId: string) {\n    await this.props.dynamoDbClient.send(\n      new DeleteCommand({\n        TableName: this.props.loansTable,\n        Key: { id: loanId, customerId },\n      }),\n    );\n  }\n\n  async deleteByCustomerId(customerId: string) {\n    const result = await this.findByCustomerId(customerId);\n\n    if (Object.keys(result.body).length === 0) {\n      throw new Error(\"Nothing to delete\");\n    }\n\n    await Promise.all(\n      result.body.map(async (item: { id: string }) => {\n        await this.props.dynamoDbClient.send(\n          new DeleteCommand({\n            TableName: this.props.loansTable,\n            Key: { id: item.id, customerId },\n          }),\n        );\n      }),\n    );\n  }\n\n  async updateInstallment(installment: Partial<IInstallment>) {\n    try {\n      const updateExpression = this.getUpdateExpression(installment, [\n        \"status\",\n        \"dueDate\",\n        \"principalDue\",\n        \"interestDue\",\n        \"feeDue\",\n        \"penaltyDue\",\n        \"totalDue\",\n        \"creationDate\",\n        \"lastUpdateDate\",\n      ]);\n      await this.props.dynamoDbClient.send(\n        new UpdateCommand({\n          TableName: this.props.loansInstallmentsTable,\n          Key: { id: installment.id, loanId: installment.loan.id },\n          ConditionExpression: \"attribute_exists(id)\",\n          ...updateExpression,\n        }),\n      );\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n"]}