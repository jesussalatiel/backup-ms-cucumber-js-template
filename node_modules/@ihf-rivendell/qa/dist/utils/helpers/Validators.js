"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.extractAgeFromInput = exports.getTimestampForAge = exports.readJson = exports.validateSchema = exports.generateUUID = exports.isValidUUID = void 0;
const fs_1 = __importDefault(require("fs"));
const ajv_1 = __importDefault(require("ajv"));
const ajv_formats_1 = __importDefault(require("ajv-formats"));
const uuid_1 = require("uuid");
const index_1 = require("../log/index");
const isValidUUID = (uuid) => (0, uuid_1.validate)(uuid) && (0, uuid_1.version)(uuid) === 4;
exports.isValidUUID = isValidUUID;
const generateUUID = () => (0, uuid_1.v4)();
exports.generateUUID = generateUUID;
const validateSchema = (schema, response) => {
    const ajv = new ajv_1.default();
    (0, ajv_formats_1.default)(ajv);
    const validate = ajv.compile(schema);
    const result = validate(response);
    if (!result) {
        index_1.logger.error(validate.errors);
        index_1.logger.info("------------------------------- Response ---------------------------------------");
        index_1.logger.info(response);
    }
    return result;
};
exports.validateSchema = validateSchema;
const readJson = (path) => {
    const rawData = fs_1.default.readFileSync(path);
    return JSON.parse(rawData.toString());
};
exports.readJson = readJson;
const getTimestampForAge = (ageInYears) => {
    const currentDate = new Date();
    const targetYear = currentDate.getFullYear() - ageInYears;
    const targetDate = new Date(targetYear, currentDate.getMonth(), currentDate.getDate());
    targetDate.setDate(targetDate.getDate() - 2);
    const timestampInSeconds = Math.floor(targetDate.getTime());
    return timestampInSeconds;
};
exports.getTimestampForAge = getTimestampForAge;
const extractAgeFromInput = (ageInput) => {
    const ageRegex = /(\d+)y/;
    const matches = ageInput.match(ageRegex);
    if (matches && matches[1]) {
        return parseInt(matches[1], 10);
    }
    return null;
};
exports.extractAgeFromInput = extractAgeFromInput;
//# sourceMappingURL=Validators.js.map