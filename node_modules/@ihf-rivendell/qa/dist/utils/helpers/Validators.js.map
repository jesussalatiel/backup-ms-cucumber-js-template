{"version":3,"file":"Validators.js","sourceRoot":"","sources":["../../../src/utils/helpers/Validators.ts"],"names":[],"mappings":";;;;;;AAAA,4CAAoB;AACpB,8CAAsB;AACtB,8DAAqC;AACrC,+BAIc;AAEd,wCAAsC;AAE/B,MAAM,WAAW,GAAG,CAAC,IAAY,EAAE,EAAE,CAC1C,IAAA,eAAY,EAAC,IAAI,CAAC,IAAI,IAAA,cAAW,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AADnC,QAAA,WAAW,eACwB;AAEzC,MAAM,YAAY,GAAG,GAAG,EAAE,CAAC,IAAA,SAAM,GAAE,CAAC;AAA9B,QAAA,YAAY,gBAAkB;AAEpC,MAAM,cAAc,GAAG,CAAC,MAAc,EAAE,QAAgB,EAAE,EAAE;IACjE,MAAM,GAAG,GAAG,IAAI,aAAG,EAAE,CAAC;IACtB,IAAA,qBAAU,EAAC,GAAG,CAAC,CAAC;IAChB,MAAM,QAAQ,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACrC,MAAM,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAClC,IAAI,CAAC,MAAM,EAAE,CAAC;QACZ,cAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9B,cAAM,CAAC,IAAI,CACT,kFAAkF,CACnF,CAAC;QACF,cAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACxB,CAAC;IACD,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAbW,QAAA,cAAc,kBAazB;AAEK,MAAM,QAAQ,GAAG,CAAC,IAAY,EAAE,EAAE;IACvC,MAAM,OAAO,GAAG,YAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IACtC,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;AACxC,CAAC,CAAC;AAHW,QAAA,QAAQ,YAGnB;AAEK,MAAM,kBAAkB,GAAG,CAAC,UAAU,EAAE,EAAE;IAC/C,MAAM,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;IAC/B,MAAM,UAAU,GAAG,WAAW,CAAC,WAAW,EAAE,GAAG,UAAU,CAAC;IAC1D,MAAM,UAAU,GAAG,IAAI,IAAI,CACzB,UAAU,EACV,WAAW,CAAC,QAAQ,EAAE,EACtB,WAAW,CAAC,OAAO,EAAE,CACtB,CAAC;IACF,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;IAC7C,MAAM,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC;IAC5D,OAAO,kBAAkB,CAAC;AAC5B,CAAC,CAAC;AAXW,QAAA,kBAAkB,sBAW7B;AAEK,MAAM,mBAAmB,GAAG,CAAC,QAAQ,EAAE,EAAE;IAC9C,MAAM,QAAQ,GAAG,QAAQ,CAAC;IAC1B,MAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACzC,IAAI,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;QAC1B,OAAO,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAClC,CAAC;IACD,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAPW,QAAA,mBAAmB,uBAO9B","sourcesContent":["import fs from \"fs\";\nimport Ajv from \"ajv\";\nimport addFormats from \"ajv-formats\";\nimport {\n  validate as uuidValidate,\n  version as uuidVersion,\n  v4 as uuidv4,\n} from \"uuid\";\n\nimport { logger } from \"../log/index\";\n\nexport const isValidUUID = (uuid: string) =>\n  uuidValidate(uuid) && uuidVersion(uuid) === 4;\n\nexport const generateUUID = () => uuidv4();\n\nexport const validateSchema = (schema: object, response: object) => {\n  const ajv = new Ajv();\n  addFormats(ajv);\n  const validate = ajv.compile(schema);\n  const result = validate(response);\n  if (!result) {\n    logger.error(validate.errors);\n    logger.info(\n      \"------------------------------- Response ---------------------------------------\",\n    );\n    logger.info(response);\n  }\n  return result;\n};\n\nexport const readJson = (path: string) => {\n  const rawData = fs.readFileSync(path);\n  return JSON.parse(rawData.toString());\n};\n\nexport const getTimestampForAge = (ageInYears) => {\n  const currentDate = new Date();\n  const targetYear = currentDate.getFullYear() - ageInYears;\n  const targetDate = new Date(\n    targetYear,\n    currentDate.getMonth(),\n    currentDate.getDate(),\n  );\n  targetDate.setDate(targetDate.getDate() - 2);\n  const timestampInSeconds = Math.floor(targetDate.getTime());\n  return timestampInSeconds;\n};\n\nexport const extractAgeFromInput = (ageInput) => {\n  const ageRegex = /(\\d+)y/;\n  const matches = ageInput.match(ageRegex);\n  if (matches && matches[1]) {\n    return parseInt(matches[1], 10);\n  }\n  return null;\n};\n"]}