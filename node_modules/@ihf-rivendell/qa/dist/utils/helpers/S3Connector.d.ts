import { S3Client } from "@aws-sdk/client-s3";
import { BaseRepositoryProps } from "../../repositories/BaseRepository";
export interface IAWSServiceProps extends BaseRepositoryProps {
    s3Client: S3Client;
}
export declare class S3Connector {
    protected props: IAWSServiceProps;
    constructor(props: IAWSServiceProps);
    uploadFile(props: {
        bucketName: string;
        relativePath: string;
        name: string;
        type?: string;
    }): Promise<import("@aws-sdk/client-s3").PutObjectCommandOutput>;
    createDirectory(bucketName: string, directory: string): Promise<import("@aws-sdk/client-s3").PutObjectCommandOutput>;
    uploadFilesFromDirectory(settings: {
        localDirectory: string;
        bucketName: string;
        remoteDirectory: string;
    }): Promise<boolean>;
    listFiles(bucketName: string, prefix?: string): Promise<import("@aws-sdk/client-s3")._Object[]>;
    deleteItem(bucket: string, key: string): Promise<boolean>;
    deleteAllItemsFromBucket(bucketName: string): Promise<boolean>;
    searchFile(bucketName: string, fileName: string): Promise<string>;
    syncToDirectory(props: {
        bucket: string;
        prefix: string;
        localDirectory: string;
    }): Promise<void[]>;
    private getFilesInDirectory;
}
