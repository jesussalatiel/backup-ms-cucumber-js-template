{"version":3,"file":"CustomersRequest.js","sourceRoot":"","sources":["../../../../src/integration/api/requests/CustomersRequest.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  extractAgeFromInput,\n  getTimestampForAge,\n} from \"../../../utils/helpers/Validators\";\nimport { BaseRequests } from \"./BaseRequest\";\nimport { IHttpBuilder } from \"../../assets/interface/IHttpBuilder\";\n\nexport class CustomerRequests extends BaseRequests {\n  private table?: any;\n\n  private types?: any;\n\n  private customersRepository: any;\n\n  private customerId?: string;\n\n  constructor(\n    protected props: IHttpBuilder,\n    shouldPrintRequest?: boolean,\n  ) {\n    super(shouldPrintRequest);\n    this.table = props.source.table;\n    this.types = props.source.customer.update.types;\n    this.customersRepository = props.repositories.repository;\n    this.customerId = props.source.customer.id;\n  }\n\n  public async updateCustomer(): Promise<any> {\n    const updatePromises = this.table.hashes().map(async (row) => {\n      const buildRequest = this.buildUpdateCustomerRequest(row);\n      await this.printRequest(buildRequest);\n      return this.customersRepository.update(this.customerId!, buildRequest);\n    });\n    return this.execPromiseAll(updatePromises);\n  }\n\n  public async updatePersonalInfo(): Promise<any> {\n    const updatePromises = this.table.hashes().map(async (row) => {\n      const buildRequest = this.buildUpdatePersonalInfoRequest(row);\n      await this.printRequest(buildRequest);\n      return this.customersRepository.update(this.customerId!, buildRequest);\n    });\n    return this.execPromiseAll(updatePromises);\n  }\n\n  public async createCustomerCognito(customerId: string) {\n    const createCustomerPromises =\n      this.buildCreateCustomerCognitoPromises(customerId);\n    const createCustomerResponses = await Promise.all(createCustomerPromises);\n    return createCustomerResponses[0];\n  }\n\n  public async createCustomerDynamo() {\n    const createCustomerPromises = this.buildCreateCustomerDynamoPromises();\n    const createCustomerResponses = await Promise.all(createCustomerPromises);\n    return createCustomerResponses[0];\n  }\n\n  public async createCustomers(): Promise<any> {\n    const isRegisteredResult = await Promise.all(this.isRegisteredDynamo());\n    const isRegisteredId = isRegisteredResult[0]?.body?.id;\n    const customerIdDynamo =\n      isRegisteredId || (await this.createCustomerDynamo()).body.id;\n    const createdCustomerCognito =\n      await this.createCustomerCognito(customerIdDynamo);\n    this.haveCustomerId(createdCustomerCognito);\n    const {\n      body: { id: customerId },\n    } = createdCustomerCognito;\n    const customer = await this.customersRepository.findById(customerId);\n    return {\n      customerId: customer?.body.id,\n      mobile: customer?.body.mobile,\n      customer,\n    };\n  }\n\n  public async changeStatusToOnboarding(customerId: string) {\n    const changeStatusToOnboardingPromises = await Promise.all(\n      this.buildChangeStatusToOnboarding(customerId),\n    );\n    return changeStatusToOnboardingPromises[0];\n  }\n\n  public async deleteByIdentityDocument() {\n    try {\n      await Promise.all(this.buildDeleteByIdentityDocument());\n      return true;\n    } catch (err) {\n      return [];\n    }\n  }\n\n  public async deleteCustomer(): Promise<any> {\n    const deletePromises = this.table.hashes().map(async (row) => {\n      let success = true;\n      try {\n        await this.customersRepository.deleteByIdentityDocument(\n          row.identityDocumentType,\n          row.identityDocumentNumber,\n        );\n      } catch (err) {\n        if (!err.message.includes(\"Nothing to delete\")) {\n          throw err;\n        }\n        success = true;\n      }\n      try {\n        await this.customersRepository.deleteByMobile(row.mobile);\n      } catch (err) {\n        if (!err.message.includes(\"User not found\")) {\n          throw err;\n        }\n        success = true;\n      }\n      return success;\n    });\n    const [response] = await Promise.all(deletePromises);\n    return response;\n  }\n\n  public async findCustomer(isExtended?: string): Promise<any> {\n    const request = this.customersRepository.findById(this.customerId!, {\n      extended: isExtended && isExtended.includes(\"extended\"),\n    });\n    await this.printRequest(request);\n    return request;\n  }\n\n  public async findLocations(): Promise<any> {\n    const request = this.customersRepository.find(\"/locations\");\n    await this.printRequest(request);\n    return request;\n  }\n\n  public async changePassword(): Promise<any> {\n    await Promise.all(\n      this.table?.hashes().map(async (row) => {\n        const buildRequest = {\n          mobile: row.mobile,\n          password: row.new_password,\n        };\n        await this.printRequest(buildRequest);\n        return this.customersRepository.changePassword(\n          row.mobile,\n          row.new_password,\n        );\n      }) || [],\n    );\n  }\n\n  public async generateAuth(): Promise<any> {\n    const authPromises =\n      this.table?.hashes().map(async (row) => {\n        const buildRequest = {\n          mobile: row.mobile,\n          password: row.password,\n        };\n        await this.printRequest(buildRequest);\n        return this.customersRepository.initiateAuth(row.mobile, row.password);\n      }) || [];\n    return this.execPromiseAll(authPromises);\n  }\n\n  public async findByMobile(mobile: string): Promise<any> {\n    return this.customersRepository.findByMobile(mobile);\n  }\n\n  public async findByIdentityDocument(): Promise<any> {\n    const findByIdentityDocumentPromises = this.table\n      .hashes()\n      .map((row) =>\n        this.customersRepository.findByIdentityDocument(\n          row.identityDocumentType,\n          row.identityDocumentNumber,\n        ),\n      );\n    return this.execPromiseAll(findByIdentityDocumentPromises);\n  }\n\n  private buildUpdateCustomerRequest(row: any) {\n    let addressJson;\n\n    if (this.shouldIncludeAddress()) {\n      addressJson = {\n        line: row.line,\n        type: row.type,\n        number: row.number,\n        apartment: row.apartment,\n        urbanization: row.urbanization,\n        location: {\n          level1: row.level1,\n          level2: row.level2,\n          level3: row.level3,\n        },\n      };\n    }\n\n    return {\n      name: row.name,\n      middleName: row.middleName,\n      civilStatus: row.civilStatus,\n      birthdate: row.birthdate,\n      email: row.email,\n      acceptedTermsAndConditions: row.acceptedTermsAndConditions,\n      address: addressJson,\n      employment: this.buildEmploymentRequest(row),\n    };\n  }\n\n  private buildDeleteByIdentityDocument() {\n    return this.table\n      .hashes()\n      .map((row) =>\n        this.customersRepository.deleteByIdentityDocument(\n          row.identityDocumentType,\n          row.identityDocumentNumber,\n        ),\n      );\n  }\n\n  private isRegisteredReniec() {\n    return this.table\n      ?.hashes()\n      .map((row) =>\n        this.customersRepository.searchReniecCustomer(\n          row.identityDocumentType,\n          row.identityDocumentNumber,\n        ),\n      );\n  }\n\n  private isRegisteredDynamo() {\n    return this.table\n      ?.hashes()\n      .map((row) =>\n        this.customersRepository.findByIdentityDocument(\n          row.identityDocumentType,\n          row.identityDocumentNumber,\n        ),\n      );\n  }\n\n  private shouldIncludeAddress() {\n    return (\n      this.types?.includes(\"employment\") || this.types?.includes(\"address\")\n    );\n  }\n\n  private buildEmploymentRequest(row: any) {\n    if (!this.types?.includes(\"employment\")) {\n      return undefined;\n    }\n\n    return {\n      type: row.type_employment,\n      sector: row.sector,\n      employer: {\n        name: row.employer,\n      },\n      ocupation: row.ocupation,\n      income: {\n        currency: row.currency,\n        range: row.range,\n      },\n    };\n  }\n\n  private buildUpdatePersonalInfoRequest(row: any) {\n    return {\n      name: row.name,\n      middleName: row.middleName,\n      civilStatus: row.civilStatus,\n      bithdate: row.bithdate,\n      email: row.email,\n      acceptedTermsAndConditions: row.acceptedTermsAndConditions === \"true\",\n      motherLastName: row.motherLastName,\n    };\n  }\n\n  private buildChangeStatusToOnboarding(customerId: string): Promise<any>[] {\n    return (\n      this.table?.hashes().map((row) => {\n        const timestamp = this.getTimestamp(row.birthdate);\n        const buildRequest = {\n          civilStatus: row.civilStatus,\n          birthdate: Number(timestamp),\n          middleName: row.middleName,\n          acceptedTermsAndConditions: row.acceptedTermsAndConditions,\n        };\n        this.printRequest(buildRequest);\n        return this.customersRepository?.update(customerId, buildRequest);\n      }) || []\n    );\n  }\n\n  private buildCreateCustomerCognitoPromises(\n    customerId: string,\n  ): Promise<any>[] {\n    return (\n      this.table?.hashes().map((row) => {\n        const buildRequest: any = {\n          email: row.email,\n          mobile: row.mobile,\n          name: row.name,\n          status: row.status,\n        };\n\n        if (row.additionalPurposes === \"true\") {\n          buildRequest.additionalPurposes = true;\n        }\n        if (row.acceptedTermsAndConditions) {\n          buildRequest.acceptedTermsAndConditions = true;\n        }\n        if (row.civilStatus) {\n          buildRequest.civilStatus = row.civilStatus;\n        }\n        this.printRequest(buildRequest);\n        return this.customersRepository?.sendInvitation(\n          customerId,\n          buildRequest,\n        );\n      }) || []\n    );\n  }\n\n  private buildCreateCustomerDynamoPromises(): Promise<any>[] {\n    return (\n      this.table?.hashes().map((row) => {\n        const buildRequest = {\n          name: row.name,\n          lastName: row.lastName,\n          motherLastName: row.motherLastName,\n          identityDocument: {\n            type: row.identityDocumentType,\n            number: row.identityDocumentNumber,\n          },\n        };\n        this.printRequest(buildRequest);\n        return this.customersRepository?.createCustomer(buildRequest);\n      }) || []\n    );\n  }\n\n  private haveCustomerId(createdCustomerResponse: any) {\n    if (createdCustomerResponse.statusCode !== 200) {\n      throw new Error(JSON.stringify(createdCustomerResponse));\n    }\n  }\n\n  private getTimestamp(birthdate: any) {\n    const extractedAge = extractAgeFromInput(birthdate);\n    if (extractedAge !== null) {\n      const timestamp = getTimestampForAge(extractedAge);\n      return timestamp;\n    }\n    return birthdate;\n  }\n}\n"]}