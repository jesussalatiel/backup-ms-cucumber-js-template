{"version":3,"file":"ContractsRequest.js","sourceRoot":"","sources":["../../../../src/integration/api/requests/ContractsRequest.ts"],"names":[],"mappings":";;;AAAA,+CAA6C;AAG7C,IAAK,WAEJ;AAFD,WAAK,WAAW;IACd,4BAAa,CAAA;AACf,CAAC,EAFI,WAAW,KAAX,WAAW,QAEf;AACD,IAAK,eAEJ;AAFD,WAAK,eAAe;IAClB,4BAAS,CAAA;AACX,CAAC,EAFI,eAAe,KAAf,eAAe,QAEnB;AAED,MAAa,iBAAkB,SAAQ,0BAAY;IAQrC;IAPJ,mBAAmB,CAAM;IAEzB,UAAU,CAAU;IAEpB,MAAM,CAAU;IAExB,YACY,KAAmB,EAC7B,kBAA4B;QAE5B,KAAK,CAAC,kBAAkB,CAAC,CAAC;QAHhB,UAAK,GAAL,KAAK,CAAc;QAI7B,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC;QACzD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC;QAC3C,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;IACrC,CAAC;IAEM,KAAK,CAAC,cAAc;QACzB,MAAM,YAAY,GAAG,IAAI,CAAC,0BAA0B,EAAE,CAAC;QACvD,MAAM,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QACtC,OAAO,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;IAC/D,CAAC;IAEM,KAAK,CAAC,iBAAiB,CAAC,UAAkB;QAC/C,MAAM,YAAY,GAAG,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;QAC7D,MAAM,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QACtC,OAAO,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;IACnE,CAAC;IAEM,KAAK,CAAC,YAAY,CAAC,UAAkB;QAC1C,OAAO,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;IACxE,CAAC;IAEO,sBAAsB,CAAC,UAAkB;QAC/C,OAAO;YACL,EAAE,EAAE,UAAU;YACd,QAAQ,EAAE;gBACR,EAAE,EAAE,IAAI,CAAC,UAAU;aACpB;YACD,OAAO,EAAE;gBACP,IAAI,EAAE,WAAW,CAAC,IAAI;gBACtB,EAAE,EAAE,IAAI,CAAC,MAAM;aAChB;YACD,OAAO,EAAE,eAAe,CAAC,EAAE;SAC5B,CAAC;IACJ,CAAC;IAEO,0BAA0B;QAChC,OAAO;YACL,QAAQ,EAAE;gBACR,EAAE,EAAE,IAAI,CAAC,UAAU;aACpB;YACD,OAAO,EAAE;gBACP,IAAI,EAAE,WAAW,CAAC,IAAI;gBACtB,EAAE,EAAE,IAAI,CAAC,MAAM;aAChB;YACD,OAAO,EAAE,eAAe,CAAC,EAAE;SAC5B,CAAC;IACJ,CAAC;CACF;AA3DD,8CA2DC","sourcesContent":["import { BaseRequests } from \"./BaseRequest\";\nimport { IHttpBuilder } from \"../../assets/interface/IHttpBuilder\";\n\nenum ProductType {\n  Loan = \"LOAN\",\n}\nenum ContractVersion {\n  v1 = \"v1\",\n}\n\nexport class ContractsRequests extends BaseRequests {\n  private contractsRepository: any;\n\n  private customerId?: string;\n\n  private loanId?: string;\n\n  constructor(\n    protected props: IHttpBuilder,\n    shouldPrintRequest?: boolean,\n  ) {\n    super(shouldPrintRequest);\n    this.contractsRepository = props.repositories.repository;\n    this.customerId = props.source.customer.id;\n    this.loanId = props.source.loan.id;\n  }\n\n  public async createContract() {\n    const buildRequest = this.buildCreateContractPromise();\n    await this.printRequest(buildRequest);\n    return this.contractsRepository.createContract(buildRequest);\n  }\n\n  public async contractSignature(contractId: string) {\n    const buildRequest = this.buildContractSignature(contractId);\n    await this.printRequest(buildRequest);\n    return this.contractsRepository.updateStatusSigned(buildRequest);\n  }\n\n  public async findContract(contractId: string) {\n    return this.contractsRepository.findById(this.customerId, contractId);\n  }\n\n  private buildContractSignature(contractId: string) {\n    return {\n      id: contractId,\n      customer: {\n        id: this.customerId,\n      },\n      product: {\n        type: ProductType.Loan,\n        id: this.loanId,\n      },\n      version: ContractVersion.v1,\n    };\n  }\n\n  private buildCreateContractPromise() {\n    return {\n      customer: {\n        id: this.customerId,\n      },\n      product: {\n        type: ProductType.Loan,\n        id: this.loanId,\n      },\n      version: ContractVersion.v1,\n    };\n  }\n}\n"]}