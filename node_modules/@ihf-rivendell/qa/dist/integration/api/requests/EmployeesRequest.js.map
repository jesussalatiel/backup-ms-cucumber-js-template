{"version":3,"file":"EmployeesRequest.js","sourceRoot":"","sources":["../../../../src/integration/api/requests/EmployeesRequest.ts"],"names":[],"mappings":"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","sourcesContent":["import { BaseRequests } from \"./BaseRequest\";\nimport { IHttpBuilder } from \"../../assets/interface/IHttpBuilder\";\n\nexport class EmployeesRequest extends BaseRequests {\n  private table?: any;\n\n  private employeesRepository: any;\n\n  constructor(\n    protected props: IHttpBuilder,\n    shouldPrintRequest?: boolean,\n  ) {\n    super(shouldPrintRequest);\n    this.table = props.source.table;\n    this.employeesRepository = props.repositories.repository;\n  }\n\n  public async findByExternalId(): Promise<any> {\n    const createPromises = this.table\n      .hashes()\n      .map((row) => this.employeesRepository.findByExternalId(row.external_id));\n    return this.execPromiseAll(createPromises);\n  }\n\n  public async deleteById(employeeId: string): Promise<any> {\n    return this.employeesRepository.deleteById(employeeId);\n  }\n\n  public async findById(employeeId: string): Promise<any> {\n    return this.employeesRepository.findById(employeeId);\n  }\n\n  public async createEmployee(): Promise<any> {\n    const createPromises = this.table.hashes().map((row) => {\n      const buildRequest = this.buildCreateEmployee(row);\n      this.printRequest(buildRequest);\n      return this.employeesRepository.createEmployee(buildRequest);\n    });\n    return this.execPromiseAll(createPromises);\n  }\n\n  public async updateById(employeeId: string): Promise<any> {\n    const createPromises = this.table.hashes().map((row) => {\n      const buildRequest = this.buildUpdateEmployee(employeeId, row);\n      this.printRequest(buildRequest);\n      return this.employeesRepository.updateEmployee(buildRequest);\n    });\n    return this.execPromiseAll(createPromises);\n  }\n\n  public async login(username: string, password: string): Promise<any> {\n    return this.employeesRepository.initiateAuth(username, password);\n  }\n\n  public async changePassword(\n    username: string,\n    password: string,\n  ): Promise<any> {\n    return this.employeesRepository.changePassword(username, password);\n  }\n\n  private buildUpdateEmployee(employeeId: string, row: any) {\n    return {\n      id: employeeId,\n      externalId: row.externalId,\n      role: row.role,\n      name: row.name,\n      middleName: row.middleName,\n      lastName: row.lastName,\n      motherLastName: row.motherLastName,\n      company: row.company,\n    };\n  }\n\n  private buildCreateEmployee(row: any) {\n    return {\n      externalId: row.externalId,\n      role: row.role,\n      name: row.name,\n      middleName: row.middleName,\n      lastName: row.lastName,\n      motherLastName: row.motherLastName,\n      company: row.company,\n    };\n  }\n}\n"]}